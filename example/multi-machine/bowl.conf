# adapt from ../kaggle_bowl/bowl.conf

data = train
iter = imgbin
  image_conf_prefix = "./tr_%1d"
  image_conf_ids = 0-7
  image_mean = "models/image_mean.bin"
  rand_mirror=1
  rand_crop=1
  max_rotate_angle=180
  max_aspect_ratio = 0.5
  max_shear_ratio = 0.3
  min_crop_size=32
  max_crop_size=48
iter = threadbuffer
iter = end

eval = val
iter = imgbin
  image_list = "./va.lst"
  image_bin  = "./va.bin"
  image_mean = "models/image_mean.bin"
iter = threadbuffer
iter = end

netconfig=start
layer[+1] = conv
  kernel_size = 4
  stride = 1
  nchannel = 48
  pad = 2
layer[+1] = relu
layer[+1] = max_pooling
  kernel_size = 3
  stride = 2
###############
layer[+1] = conv
  nchannel = 96
  kernel_size = 3
  stride = 1
  pad = 1
layer[+1] = relu
layer[+1] = conv
  nchannel = 96
  kernel_size = 3
  stride = 1
  pad = 1
layer[+1] = relu
layer[+1] = max_pooling
  kernel_size = 3
  stride = 2
##############
layer[+1] = conv
  nchannel = 128
  kernel_size = 2
  stride = 1
layer[+1] = relu
layer[+1] = conv
  nchannel = 128
  kernel_size = 3
  stride = 1
layer[+1] = max_pooling
  kernel_size = 3
  stride = 2
layer[+1] = flatten
layer[+1] = fullc
  nhidden = 256
layer[+0] = dropout
  threshold = 0.5
layer[+1] = fullc
  nhidden = 121
layer[+0] = softmax
netconfig=end

# evaluation metric
metric = error

dev = gpu:0,1
max_round = 100
num_round = 100

# input shape not including batch
input_shape = 3,40,40

batch_size = 64

# global parameters in any sectiion outside netconfig, and iter
momentum = 0.9
wmat:lr  = 0.001
wmat:wd  = 0.0005

bias:wd  = 0.000
bias:lr  = 0.002

# all the learning rate schedule starts with lr
lr:schedule = expdecay
lr:gamma = 0.1
lr:step = 20000

save_model=0
model_dir=models
print_step = 1
# random config
random_type = gaussian
init_sigma = 0.01

# new line
